"""empty message

<<<<<<< HEAD:migrations/versions/9a003aaab85c_.py
Revision ID: 9a003aaab85c
Revises: 
Create Date: 2019-05-14 17:26:35.251764
=======
Revision ID: c0cb38477031
Revises: 
Create Date: 2019-05-14 16:23:49.517708
>>>>>>> b4cc5b7416a95382d138fa8079eff2d186caffd5:migrations/versions/c0cb38477031_.py

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
<<<<<<< HEAD:migrations/versions/9a003aaab85c_.py
revision = '9a003aaab85c'
=======
revision = 'c0cb38477031'
>>>>>>> b4cc5b7416a95382d138fa8079eff2d186caffd5:migrations/versions/c0cb38477031_.py
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category_task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meta_tags_task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('password_hash', sa.String(length=400), nullable=True),
    sa.Column('token', sa.String(length=30), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=400), nullable=True),
    sa.Column('description', sa.String(length=2000), nullable=True),
    sa.Column('date_execution', sa.DateTime(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('performer_id', sa.Integer(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('execution_phase', sa.Integer(), nullable=True),
    sa.Column('todo_or_not_todo', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['performer_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('category_task_table',
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category_task.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], )
    )
    op.create_table('tags_task',
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('meta_tag_task_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['meta_tag_task_id'], ['meta_tags_task.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tags_task')
    op.drop_table('category_task_table')
    op.drop_table('task')
    op.drop_table('user')
    op.drop_table('meta_tags_task')
    op.drop_table('category_task')
    # ### end Alembic commands ###
